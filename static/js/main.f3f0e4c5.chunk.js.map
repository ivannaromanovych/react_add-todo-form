{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","usersFromServer","find","TodoList","todos","map","DEFAULT_INPUTS","DEFAULT_INPUTS_ERRORS","TodoForm","onAdd","users","useState","inputs","setInputs","inputsErrors","setInputsErrors","handleInputChange","event","target","value","prevFields","prevErrors","action","method","onSubmit","preventDefault","type","placeholder","onChange","defaultChecked","getNewTodoId","Math","max","App","todosFromServer","setTodos","newTodo","currTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3f0e4c5.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User | null,\n}\n\nexport const UserInfo: React.FC<Props> = ({\n  user,\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport usersFromServer from '../../api/users';\n\nimport { UserInfo } from '../UserInfo';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nfunction getUserById(id: number): User | null {\n  return usersFromServer.find((user: User) => user.id === id) || null;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => (\n  <article\n    data-id={todo.id}\n    className={cn(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={getUserById(todo.userId)} />\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  onAdd: (newTodo: Todo) => void;\n  users: User[],\n}\nconst DEFAULT_INPUTS = {\n  title: '',\n  userId: 0,\n};\n\nconst DEFAULT_INPUTS_ERRORS = {\n  title: false,\n  userId: false,\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  onAdd = () => { },\n  users,\n}) => {\n  const [inputs, setInputs] = useState(DEFAULT_INPUTS);\n  const [inputsErrors, setInputsErrors] = useState(DEFAULT_INPUTS_ERRORS);\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    setInputs(prevFields => ({\n      ...prevFields,\n      [name]: name === 'userId' ? +value : value,\n    }));\n    setInputsErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: !(name === 'userId' ? +value : value),\n    }));\n  };\n\n  const reset = () => {\n    setInputs(DEFAULT_INPUTS);\n    setInputsErrors(DEFAULT_INPUTS_ERRORS);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event?.preventDefault();\n    setInputsErrors(() => ({\n      title: !inputs.title,\n      userId: !inputs.userId,\n    }));\n\n    if (!inputs.title || !inputs.userId) {\n      return;\n    }\n\n    onAdd({\n      ...inputs,\n      id: 0,\n      completed: false,\n    });\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        {'Title: '}\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={inputs.title}\n          placeholder=\"Enter title\"\n          onChange={handleInputChange}\n          name=\"title\"\n        />\n        {inputsErrors.title && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        {'User: '}\n        <select\n          data-cy=\"userSelect\"\n          value={inputs.userId}\n          onChange={handleInputChange}\n          name=\"userId\"\n        >\n          <option value=\"0\" defaultChecked>Choose a user</option>\n          {users.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {inputsErrors.userId && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { Todo } from './types/Todo';\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(({ id }) => id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const handleAddTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currTodos => [...currTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onAdd={handleAddTodo} users={usersFromServer} />\n      <TodoList todos={todos} />\n    </div>\n  );\n  // todos: { userId: number; id: number; title: string; completed: boolean; user: { id: number; name: string; username: string; email: string; }; } []\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}